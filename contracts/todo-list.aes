contract ToDoList =

  record task =
    { name : string
    , completed : bool
    , status : string}

  type tasks = map(int, task)

  record state =
    { seq_id : int
    , tasks : tasks }

  entrypoint init() : state =
    { seq_id = 0, tasks = {}}

  stateful entrypoint add_task(task_name : string) =
    let next_seq_id = state.seq_id + 1
    let new_task_record = { name = task_name, completed = false, status = "" }
    put(state{ tasks[state.seq_id] = new_task_record, seq_id = next_seq_id })

  stateful entrypoint set_task_completed(seq_id : int) =
    put(state{ tasks[seq_id].completed = true })

  stateful entrypoint set_task_status(seq_id : int, status : string) =
    require(check_status(status), "INVALID_STATUS")
    require(!state.tasks[seq_id].completed, "ALREADY_COMPLETED")
    put(state{ tasks[seq_id].status = status })

  entrypoint get_tasks() : tasks =
    state.tasks

  entrypoint check_status(status :string) : bool =
    switch(status)
      "InProgress" => true
      "ReadyForReview" => true
      "ToBeDeployed" => true
      _ => false
